{"version":3,"sources":["swift.js"],"names":["hello","colors","title","document","querySelector","textContent","createElement","wave","appendChild","chars","split","i","length","char","span","style","color","insertBefore","childNodes","cur","className","taglines","elms","querySelectorAll","elm","cmd","open","createTextNode","txt","firstChild","close","innerHTML","email","lett","contact","func","link","mid","port","h3Before","me","marginBottom","insertAdjacentElement","h3After","start","bool","Math","round","random","end","marginTop","projects","classs","name","h3","comment","window","_theme"],"mappings":"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","file":"swift.js","sourceRoot":"../../js","sourcesContent":["/**\n *  Personal Site: My humble personal homepage, made with a tiny bit but not much care.\n *  <https://github.com/MattIPv4/Personal-Site/>\n *  Copyright (C) 2021 Matt Cowley (MattIPv4) (me@mattcowley.co.uk)\n *\n *  This program is free software: you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published\n *   by the Free Software Foundation, either version 3 of the License, or\n *   (at your option) any later version.\n *  This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *  You should have received a copy of the GNU General Public License\n *   along with this program. If not, please see\n *   <https://github.com/MattIPv4/Personal-Site/blob/master/LICENSE.md> or <http://www.gnu.org/licenses/>.\n */\n\nconst hello = () => {\n    const colors = [\n        '#97C774',\n        '#B63E98',\n        '#D18E62',\n        '#DB3E41',\n        '#1BABA5'\n    ];\n    const title = document.querySelector('.content h1');\n    title.textContent = ', I\\'m ' + title.textContent + '. ';\n    const hello = document.createElement('span');\n    const wave = document.createElement('span');\n    wave.textContent = 'ðŸ‘‹ ';\n    hello.appendChild(wave);\n    const chars = 'Hello'.split('');\n    for (let i = 0; i < chars.length; i++) {\n        const char = chars[i];\n        const span = document.createElement('span');\n        span.style.color = colors[i % colors.length];\n        span.textContent = char;\n        hello.appendChild(span);\n    }\n    title.insertBefore(hello, title.childNodes[0] || null);\n    const cur = document.createElement('span');\n    cur.className = 'cursor';\n    cur.textContent = '|';\n    title.appendChild(cur);\n};\n\nconst taglines = () => {\n    const elms = document.querySelectorAll('.content h2, .content h3:not(.email):not(.featured)');\n    for (let i = 0; i < elms.length; i++) {\n        const elm = elms[i];\n        const cmd = document.createElement('span');\n        cmd.textContent = 'print';\n        cmd.className = 'print-cmd';\n        const open = document.createTextNode('(');\n        const txt = document.createElement('span');\n        txt.appendChild(document.createTextNode('\"'));\n        while (elm.firstChild) txt.appendChild(elm.firstChild);\n        txt.appendChild(document.createTextNode('\"'));\n        txt.className = 'print-txt';\n        const close = document.createTextNode(')');\n        elm.innerHTML = '';\n        elm.appendChild(cmd);\n        elm.appendChild(open);\n        elm.appendChild(txt);\n        elm.appendChild(close);\n    }\n};\n\nconst email = () => {\n    const elm = document.querySelector('.content .email');\n    const lett = document.createElement('span');\n    lett.className = 'let';\n    lett.textContent = 'let';\n    const contact = document.createTextNode(' Contact = ');\n    const func = document.createElement('span');\n    func.className = 'func-cmd';\n    func.textContent = 'email';\n    const open = document.createTextNode('(\"');\n    const link = elm.querySelector('a');\n    const mid = document.createTextNode('\", ');\n    const port = document.createElement('span');\n    port.className = 'let-var';\n    port.textContent = '25';\n    const close = document.createTextNode(')');\n    elm.innerHTML = '';\n    elm.appendChild(lett);\n    elm.appendChild(contact);\n    elm.appendChild(func);\n    elm.appendChild(open);\n    elm.appendChild(link);\n    elm.appendChild(mid);\n    elm.appendChild(port);\n    elm.appendChild(close);\n};\n\nconst contact = () => {\n    // Before\n    const h3Before = document.createElement('h3');\n    const lett = document.createElement('span');\n    lett.className = 'let';\n    lett.textContent = 'let';\n    const me = document.createTextNode(' Me = ');\n    const func = document.createElement('span');\n    func.className = 'func-cmd';\n    func.textContent = 'links';\n    const open = document.createTextNode('([');\n    h3Before.appendChild(lett);\n    h3Before.appendChild(me);\n    h3Before.appendChild(func);\n    h3Before.appendChild(open);\n    h3Before.style.marginBottom = '0';\n    document.querySelector('.content .contact').insertAdjacentElement('beforeBegin', h3Before);\n\n    // Links\n    const elms = document.querySelectorAll('.contact a');\n    for (let i = 0; i < elms.length; i++) {\n        const elm = elms[i];\n        const span = document.createElement('span');\n        span.appendChild(elm.querySelector('strong'));\n        span.appendChild(elm.querySelector('small'));\n        elm.insertBefore(span, elm.firstChild);\n    }\n\n    // After\n    const h3After = document.createElement('h3');\n    const start = document.createTextNode('], ');\n    const bool = document.createElement('span');\n    bool.className = 'let-var';\n    bool.textContent = Math.round(Math.random()) ? 'true' : 'false';\n    const end = document.createTextNode(')');\n    h3After.appendChild(start);\n    h3After.appendChild(bool);\n    h3After.appendChild(end);\n    h3After.style.marginTop = '0';\n    document.querySelector('.content .contact').insertAdjacentElement('afterEnd', h3After);\n};\n\nconst projects = () => {\n    // Before\n    const elm = document.querySelector('.content .featured');\n    const classs = document.createElement('span');\n    classs.className = 'let';\n    classs.textContent = 'class';\n    const name = document.createElement('span');\n    name.className = 'print-cmd';\n    name.textContent = ' FeaturedProjects ';\n    const open = document.createElement('span');\n    open.className = 'func-cmd';\n    open.textContent = '{';\n    elm.innerHTML = '';\n    elm.appendChild(classs);\n    elm.appendChild(name);\n    elm.appendChild(open);\n\n    // After\n    const h3 = document.createElement('h3');\n    const close = document.createElement('span');\n    close.className = 'func-cmd';\n    close.textContent = '} ';\n    const comment = document.createElement('span');\n    comment.className = 'comment';\n    comment.textContent = 'End FeaturedProjects class';\n    h3.appendChild(close);\n    h3.appendChild(comment);\n    document.querySelector('.content .projects').insertAdjacentElement('afterEnd', h3);\n};\n\nwindow._theme = () => {\n    delete window._theme;\n\n    hello();\n    taglines();\n    email();\n    contact();\n    projects();\n};\n"]}